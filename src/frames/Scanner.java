/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package frames;

import gnu.io.CommPortIdentifier;
import gnu.io.SerialPort;
import java.awt.Component;
import java.awt.Window;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStream;
import javax.swing.JColorChooser;
import javax.swing.JFrame;
import javax.swing.JInternalFrame;
import org.jzy3d.chart.Chart;
import org.jzy3d.chart.ChartLauncher;
import org.jzy3d.chart.controllers.mouse.camera.CameraMouseController;
import org.jzy3d.colors.Color;
import org.jzy3d.colors.ColorMapper;
import org.jzy3d.colors.colormaps.ColorMapRainbow;
import org.jzy3d.maths.BoundingBox3d;
import org.jzy3d.maths.Coord3d;
import org.jzy3d.maths.Scale;
import org.jzy3d.plot3d.primitives.MultiColorScatter;
import org.jzy3d.plot3d.primitives.axes.AxeBox;
import org.jzy3d.plot3d.rendering.view.modes.ViewPositionMode;

/**
 *
 * @author Amila
 */
public class Scanner extends javax.swing.JFrame {

    private String port;
    private String bitRate;
    InputStream is;
    OutputStream os;
    SerialPort sp;
    InputStreamReader isr;
    Thread read;
    int numPoint = 510;
    int roundStep = 51;
    int maxObjlen = 10;
    int lengthToCenter = 20;
    float[] dataSet = new float[numPoint];
    float x[] = new float[numPoint];
    float y[] = new float[numPoint];
    Color mainColor;
    Color bgColor;
    Chart chart;
    boolean axisVisible;


    /**
     * Creates new form Scanner
     */
    public Scanner() {
        initComponents();
        mainColor = Color.BLACK;
        bgColor = Color.WHITE;
        axisVisible = true;

        //setExtendedState(MAXIMIZED_BOTH);

    }

    public Scanner(String port, String bitRate) {
        initComponents();
        this.port = port;
        this.bitRate = bitRate;
        //setExtendedState(MAXIMIZED_BOTH);
        mainColor = Color.BLACK;
        bgColor = Color.WHITE;
        axisVisible = true;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jColorChooser1 = new javax.swing.JColorChooser();
        btn_scan = new javax.swing.JButton();
        btn_stop = new javax.swing.JButton();
        btn_view = new javax.swing.JButton();
        currentPB = new javax.swing.JProgressBar();
        lbl_overall = new javax.swing.JLabel();
        lbl_current = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        overallPB = new javax.swing.JProgressBar();
        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jCheckBox1 = new javax.swing.JCheckBox();
        jLabel1 = new javax.swing.JLabel();
        txt_pointSize = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Virtual 3D Designer");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btn_scan.setText("Scan");
        btn_scan.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btn_scan.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btn_scan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_scanActionPerformed(evt);
            }
        });
        getContentPane().add(btn_scan, new org.netbeans.lib.awtextra.AbsoluteConstraints(43, 49, 90, 70));

        btn_stop.setText("Stop");
        btn_stop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_stopActionPerformed(evt);
            }
        });
        getContentPane().add(btn_stop, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 49, 97, 70));

        btn_view.setText("View");
        btn_view.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_viewActionPerformed(evt);
            }
        });
        getContentPane().add(btn_view, new org.netbeans.lib.awtextra.AbsoluteConstraints(265, 49, 97, 70));

        currentPB.setStringPainted(true);
        getContentPane().add(currentPB, new org.netbeans.lib.awtextra.AbsoluteConstraints(42, 156, 320, 22));

        lbl_overall.setText("Overall Process:");
        getContentPane().add(lbl_overall, new org.netbeans.lib.awtextra.AbsoluteConstraints(42, 196, -1, -1));

        lbl_current.setText("Current Process:");
        getContentPane().add(lbl_current, new org.netbeans.lib.awtextra.AbsoluteConstraints(42, 136, -1, -1));

        jButton3.setText("Resume");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 250, -1, -1));

        overallPB.setStringPainted(true);
        getContentPane().add(overallPB, new org.netbeans.lib.awtextra.AbsoluteConstraints(42, 216, 320, 22));

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "View Options"));
        jPanel1.setOpaque(false);

        jButton1.setText("Main Color");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Background Color");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jCheckBox1.setSelected(true);
        jCheckBox1.setText("Axis Displayed");
        jCheckBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox1ItemStateChanged(evt);
            }
        });

        jLabel1.setText("Point Size :");

        txt_pointSize.setText("5.0");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(35, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton2)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_pointSize, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jCheckBox1)
                    .addComponent(jButton1))
                .addGap(88, 88, 88))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jCheckBox1)
                .addGap(47, 47, 47)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txt_pointSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2)
                .addContainerGap(40, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 37, -1, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel3.setText("Copyright LEGIONS 2014 Batch 12");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 310, -1, -1));

        jLabel2.setIcon(new javax.swing.ImageIcon("C:\\Users\\Amila\\Pictures\\Blue-White-Abstract-Background.jpg")); // NOI18N
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(-660, -370, 1360, 720));

        jMenu1.setText("File");

        jMenuItem1.setText("jMenuItem1");
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        jMenu3.setText("Tools");

        jMenuItem2.setText("Port Settings");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem2);

        jMenuBar1.add(jMenu3);

        jMenu4.setText("Help");
        jMenuBar1.add(jMenu4);

        setJMenuBar(jMenuBar1);

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-713)/2, (screenSize.height-409)/2, 713, 409);
    }// </editor-fold>//GEN-END:initComponents

    private void btn_scanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_scanActionPerformed



        try {

            CommPortIdentifier cpid = CommPortIdentifier.getPortIdentifier(port);
            sp = (SerialPort) cpid.open("Virtual 3D Designer", 3000);
            os = sp.getOutputStream();
            os.write(65);
            os.close();
            is = sp.getInputStream();

            isr = new InputStreamReader(is);
            read = new Thread(new Runnable() {
                byte[] buffer = new byte[5];
                float dis;
                int i;
                boolean limit = true;

                @Override
                public void run() {
                    while (limit) {
                        try {

                            if (is.read() == 65) {
                                for (int a = 0; a < 5; a++) {
                                    byte b = (byte) is.read();
                                    if ((b > 47 && b < 58) || b == 46) {
                                        buffer[a] = b;
                                    } else {
                                        buffer[a] = 48;
                                    }
                                }

                                dis = Float.parseFloat(new String(buffer));
                                dataSet[i] = dis;
                                System.out.println(dataSet[i]);
                                i++;
                                overallPB.setValue(((i+1)*100)/numPoint);
                                //System.out.println(((i+1)*100)/numPoint);
                                currentPB.setValue((((i+1)%roundStep)*100)/roundStep);
                                if (i == numPoint - 1) {
                                    limit = false;
                                }

                            }
                        } catch (IOException ex) {
                            System.out.println(ex);
                        }

                    }

                }
            });
            read.start();
        } catch (Exception e) {
            System.out.println(e);
        }

    }//GEN-LAST:event_btn_scanActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        new Settings().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void btn_stopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_stopActionPerformed
        try {
            read.stop();
            is.close();
            sp.close();
            CommPortIdentifier cpid = CommPortIdentifier.getPortIdentifier(port);
            sp = (SerialPort) cpid.open("Virtual 3D Designer", 3000);
            os = sp.getOutputStream();
            os.write(66);
            os.close();
            sp.close();
        } catch (Exception ex) {
            System.out.println(ex);
        }

    }//GEN-LAST:event_btn_stopActionPerformed

    private void btn_viewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_viewActionPerformed
        float rad;
        for (int i = 0; i < numPoint; i++) {
            if ( (lengthToCenter-maxObjlen)<dataSet[i] &&  (lengthToCenter+maxObjlen)>dataSet[i] ) {
                rad = (lengthToCenter - dataSet[i]);
            }else{
                rad = 10;
            }

//            if (i % roundStep <= (roundStep - 1) / 4) {
//                x[i] = maxObjlen + (float) (rad * Math.cos(Math.toRadians((double) ((i % roundStep) * 360 / roundStep))));
//                y[i] = maxObjlen + (float) (rad * Math.sin(Math.toRadians((double) ((i % roundStep) * 360 / roundStep))));
//            } else if (i % roundStep <= (roundStep - 1) / 2) {
//                x[i] = maxObjlen + (float) (rad * Math.cos(Math.toRadians((double) ((i % roundStep) * 360 / roundStep))));
//                y[i] = maxObjlen + (float) (rad * Math.sin(Math.toRadians((double) ((i % roundStep) * 360 / roundStep))));
//            } else if (i % roundStep <= (roundStep - 1) * 3 / 4) {
//                x[i] = maxObjlen + (float) (rad * Math.cos(Math.toRadians((double) ((i % roundStep) * 360 / roundStep))));
//                y[i] = maxObjlen + (float) (rad * Math.sin(Math.toRadians((double) ((i % roundStep) * 360 / roundStep))));
//            } else if (i % roundStep <= (roundStep - 1)) {
//                x[i] = maxObjlen + (float) (rad * Math.cos(Math.toRadians((double) ((i % roundStep) * 360 / roundStep))));
//                y[i] = maxObjlen + (float) (rad * Math.sin(Math.toRadians((double) ((i % roundStep) * 360 / roundStep))));
//            }

            x[i] = Math.abs(maxObjlen + (float) (rad * Math.cos(Math.toRadians((double) ((i % roundStep) * 360 / roundStep)))));
            y[i] =Math.abs( maxObjlen + (float) (rad * Math.sin(Math.toRadians((double) ((i % roundStep) * 360 / roundStep)))));
            System.out.println(x[i] + ", " + y[i]);

        }


        Coord3d[] points = new Coord3d[numPoint];
        for (int i = 0; i < numPoint; i++) {
            try {
                float z = (float) ((i / roundStep)+1);
                points[i] = new Coord3d(z,x[i], y[i]);
                System.out.println(z + ", " + x[i] + ", " + y[i]);
            }catch(Exception e){
                System.out.println(e);
            }
        }


//        points[0] = new Coord3d(1, 1, 1);
//        points[1] = new Coord3d(1, 10, 1);
//        points[2] = new Coord3d(1, 1, 10);
//        points[3] = new Coord3d(10, 10, 1);
//        points[4] = new Coord3d(10, 1, 1);
//        points[5] = new Coord3d(1, 10, 10);
//        points[6] = new Coord3d(10, 1, 10);
//        points[7] = new Coord3d(10, 10, 10);
        try {
            MultiColorScatter scatter = new MultiColorScatter(points, new ColorMapper(new ColorMapRainbow(), 0, 0));
            float f = Float.parseFloat(txt_pointSize.getText());
            scatter.setWidth(f!=0?f:5);

            chart = new Chart();
            chart.setViewMode(ViewPositionMode.FREE);


            chart.setAxeDisplayed(axisVisible);

            chart.getAxeLayout().setMainColor(mainColor);
            chart.getView().setBackgroundColor(bgColor);


            chart.getScene().add(scatter);
            
            ChartLauncher.openChart(chart,"LEGION Virtual 3D Designer");



        } catch (Exception e) {
            System.out.println(e);
        }


//        JInternalFrame frame = new JInternalFrame();
//        frame.setClosable(true);
//        frame.setMaximizable(true);
//        frame.setIconifiable(true);
//        frame.doDefaultCloseAction();
//        jDesktopPane1.add(frame);
//        frame.setSize(720, 720);
//        MyShape shape = new MyShape(x, y);
//        frame.add(shape);
//        frame.setVisible(true);

    }//GEN-LAST:event_btn_viewActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        mainColor = new Color(JColorChooser.showDialog(this, "Main Color", java.awt.Color.BLACK));
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        bgColor = new Color(JColorChooser.showDialog(this, "Background Color", java.awt.Color.WHITE));
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jCheckBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox1ItemStateChanged
        axisVisible = jCheckBox1.isSelected();
    }//GEN-LAST:event_jCheckBox1ItemStateChanged

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        try {
            os.write(65);
        } catch (Exception e) {
            System.out.println("Error in resume");
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Scanner.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Scanner.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Scanner.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Scanner.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Scanner().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_scan;
    private javax.swing.JButton btn_stop;
    private javax.swing.JButton btn_view;
    private javax.swing.JProgressBar currentPB;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JColorChooser jColorChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lbl_current;
    private javax.swing.JLabel lbl_overall;
    private javax.swing.JProgressBar overallPB;
    private javax.swing.JTextField txt_pointSize;
    // End of variables declaration//GEN-END:variables
}
